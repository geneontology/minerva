PREFIX dc: <http://purl.org/dc/elements/1.1/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX enabled_by: <http://purl.obolibrary.org/obo/RO_0002333>
PREFIX occurs_in: <http://purl.obolibrary.org/obo/BFO_0000066>
PREFIX involved_in: <http://purl.obolibrary.org/obo/RO_0002331>
PREFIX enables: <http://purl.obolibrary.org/obo/RO_0002327>
PREFIX part_of: <http://purl.obolibrary.org/obo/BFO_0000050>
PREFIX evidence: <http://geneontology.org/lego/evidence>
PREFIX gomodel: <http://model.geneontology.org/>
PREFIX acts_upstream_of: <http://purl.obolibrary.org/obo/RO_0002263>
PREFIX acts_upstream_of_positive_effect: <http://purl.obolibrary.org/obo/RO_0004034>
PREFIX acts_upstream_of_negative_effect: <http://purl.obolibrary.org/obo/RO_0004035>
PREFIX acts_upstream_of_or_within: <http://purl.obolibrary.org/obo/RO_0002264>
PREFIX acts_upstream_of_or_within_positive_effect: <http://purl.obolibrary.org/obo/RO_0004032>
PREFIX acts_upstream_of_or_within_negative_effect: <http://purl.obolibrary.org/obo/RO_0004033>
PREFIX involved_in_regulation_of: <http://purl.obolibrary.org/obo/RO_0002428>
PREFIX involved_in_negative_regulation_of: <http://purl.obolibrary.org/obo/RO_0002430>
PREFIX involved_in_positive_regulation_of: <http://purl.obolibrary.org/obo/RO_0002429>
PREFIX involved_in_or_involved_in_regulation_of: <http://purl.obolibrary.org/obo/RO_0002431>
PREFIX contributes_to: <http://purl.obolibrary.org/obo/RO_0002326>
PREFIX BFO: <http://purl.obolibrary.org/obo/BFO_>
PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>
PREFIX PR: <http://purl.obolibrary.org/obo/PR_>
PREFIX molecular_function: <http://purl.obolibrary.org/obo/GO_0003674>

SELECT DISTINCT ?pr ?pr_type ?rel ?target ?blank_comp ?target_type
WHERE {
    # ?pr, ?target: some instances/individuals? 
    # ?rel: qualifier in GPAD.
    # ?pr_type: DB object ID in GPAD, e.g., <http://www.informatics.jax.org/accession/MGI:MGI:1925503>
    # ?target_type: GO ID, i.e., the GO identifier for the term attributed to the DB object ID, e.g., <http://purl.obolibrary.org/obo/GO_0005200>.
    
    ?pr ?rel ?target .
    ?pr rdf:type ?pr_type .
    
    # Return only most specific relationships between two indivividuals
    FILTER NOT EXISTS {
        ?pr ?other_rel ?target .
        ?other_rel rdfs:subPropertyOf ?rel .
        FILTER(?other_rel != ?rel) 
	}
	
	# The value of ?rel should be either one of these values.
	VALUES ?rel { 
        enables:
        involved_in: 
        part_of: 
        acts_upstream_of: 
        acts_upstream_of_positive_effect: 
        acts_upstream_of_negative_effect: 
        acts_upstream_of_or_within: 
        acts_upstream_of_or_within_positive_effect: 
        acts_upstream_of_or_within_negative_effect: 
        contributes_to:
	}
	
	# the value of ?pr_type should be IRI.
	FILTER(isIRI(?pr_type)) 
	
	# The value of ?pr_type should not be the values in this list, i.e. filter out meaningless nodes.
	FILTER(?pr_type NOT IN (rdfs:Resource, owl:Thing, owl:NamedIndividual, BFO:0000002, BFO:0000003, BFO:0000004, BFO:0000015, BFO:0000040, PR:000000001))
	
	# The value of ?pr_type should not begin with these values, e.g., GO ID.
	FILTER(!STRSTARTS(STR(?pr_type), "http://purl.obolibrary.org/obo/GO_")) # would be better to do this semantically but expensive to add NEO tbox to model
	FILTER(!STRSTARTS(STR(?pr_type), "http://purl.obolibrary.org/obo/PO_")) # would be better to do this semantically but expensive to add NEO tbox to model
	FILTER(!STRSTARTS(STR(?pr_type), "http://purl.obolibrary.org/obo/UBERON_")) # would be better to do this semantically but expensive to add NEO tbox to model
	FILTER(!STRSTARTS(STR(?pr_type), "http://purl.obolibrary.org/obo/CL_")) # would be better to do this semantically but expensive to add NEO tbox to model
	FILTER(!STRSTARTS(STR(?pr_type), "http://purl.obolibrary.org/obo/EMAPA_")) # would be better to do this semantically but expensive to add NEO tbox to model
  FILTER(!STRSTARTS(STR(?pr_type), "http://www.biopax.org/")) # would be better to do this semantically but expensive to add NEO tbox to model
	
	FILTER NOT EXISTS {
        	?pr <http://arachne.geneontology.org/indirect_type> ?pr_type .
	}
    # the value of ?target_type should be IRI.
	FILTER(isIRI(?target_type))

	# The object of complementOf should be also GO terms
	FILTER(STRSTARTS(STR(?target_type), "http://purl.obolibrary.org/obo/GO_"))

	FILTER NOT EXISTS {
		?target <http://arachne.geneontology.org/indirect_type> ?target_type .
	}
	
	FILTER(?target_type NOT IN (rdfs:Resource, owl:Thing, owl:NamedIndividual, BFO:0000002, BFO:0000003, BFO:0000004, BFO:0000015, BFO:0000040))
		
	{
	    # Case 1. This union branch contains the triple patterns that retrieve only GO terms as targets (without negations)
		?target rdf:type ?target_type .
	} UNION {
		# Case 2. this union branch covers the negation case represented using ComplementOf. 
		# This negation is represented triples connected by a blank node.
    	# E.g., the following patterns captures the graph pattern, e.g., 
    	# :5993df9e00000100 rdf:type _:b0
    	# _:b0 owl:complementOf :GO_0044108
    	
		?target rdf:type ?blank_comp .
    	?blank_comp owl:complementOf ?target_type

		# the value mapping ?blank_comp should be a blank node.		
		FILTER(isBlank(?blank_comp))		
	} 
  
  # molecular function annotations must only use 'enables' or 'contributes to'
  FILTER(!(
    (EXISTS { ?target rdf:type molecular_function: }) 
    && 
    (?rel NOT IN ( enables:, contributes_to: ))
  ))
}